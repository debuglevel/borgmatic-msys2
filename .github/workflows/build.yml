name: Build MSYS2

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      MSYS2_URL: https://github.com/msys2/msys2-installer/releases/download/2023-10-26/msys2-base-x86_64-20231026.tar.xz
      WINE_DOCKER_IMAGE: debuglevel/wine-msys2:latest
      BORGMATIC_VERSION: borgmatic @ git+https://github.com/debuglevel/borgmatic@edd2cceceeeb3984a9d39f41e7cfc6fb6495a21f
      BORG_VERSION: borgbackup==1.2.7

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Extract MSYS2
        run: |
          echo \# wget --quiet -O msys2.tar.xz $MSYS2_URL
          wget --quiet -O msys2.tar.xz $MSYS2_URL
          #
          echo \# ls -al .
          ls -al .
          #
          echo \# tar --extract --file msys2.tar.xz
          tar --extract --file msys2.tar.xz

      - name: Test MSYS2 with WINE
        run: |
          shopt -s expand_aliases
          alias docker_wine='docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 /mnt/usr/bin/bash.exe -l -c'
          #
          echo \# docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 --version
          docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 --version
          #
          echo \# docker_wine "pwd"
          docker_wine "pwd"
          #
          echo \# docker_wine "whoami"
          docker_wine "whoami"
          #
          echo \# docker_wine "pacman --version"
          docker_wine "pacman --version"

      - name: Install borg/borgmatic dependencies
        run: |
          shopt -s expand_aliases
          alias docker_wine='docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 /mnt/usr/bin/bash.exe -l -c'
          #
          docker_wine "pacman --sync --needed --noconfirm python python-pip"
          docker_wine "pacman --sync --needed --noconfirm git base-devel gcc openssl-devel pkgconf"
          docker_wine "pacman --sync --needed --noconfirm openssh ssh-pageant"
          #
          docker_wine "which python"
          docker_wine "which python3"
          docker_wine "python --version"
          docker_wine "python3 --version"
          docker_wine "which pip"
          docker_wine "which pip3"
          #
          docker_wine "python -m pip install --upgrade pip setuptools wheel"

      - name: Install borgmatic
        run: |
          shopt -s expand_aliases
          alias docker_wine='docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 /mnt/usr/bin/bash.exe -l -c'
          #
          docker_wine "SETUPTOOLS_USE_DISTUTILS=stdlib pip install '$BORGMATIC_VERSION'"
          docker_wine "borgmatic --version"

      - name: Install borg
        run: |
          shopt -s expand_aliases
          alias docker_wine='docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 /mnt/usr/bin/bash.exe -l -c'
          #
          docker_wine "pip install $BORG_VERSION"
          docker_wine "borg --version"          

      - name: Test borgmatic
        run: |
          shopt -s expand_aliases
          alias docker_wine='docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 /mnt/usr/bin/bash.exe -l -c'
          #
          cp test.sh $PWD/msys64/
          docker_wine "bash /test.sh"

      - name: Install tools we will likely need
        run: |
          shopt -s expand_aliases
          alias docker_wine='docker run -e WINEDEBUG=-all -v $PWD/msys64:/mnt/ $WINE_DOCKER_IMAGE /opt/wine/bin/wine64 /mnt/usr/bin/bash.exe -l -c'
          #
          docker_wine "pacman --sync --needed --noconfirm tmux nano mingw-w64-x86_64-jq"       

      - name: Compress (zstd,19)
        run: |
          export ZSTD_CLEVEL=19
          export ZSTD_NBTHREADS=4
          export FILENAME=borgmatic-msys2_$(date +%Y-%m-%dT%H-%M-%S).tar.zstd
          tar --create --zstd --file $FILENAME msys64
          ls -alh $FILENAME
          #curl --fail-with-body --upload-file $FILENAME https://free.keep.sh
          #RC=$?
          #echo RC: $RC
          #exit $RC

      # - name: Upload (to keep.sh)
      #   run: |
      #     curl --fail-with-body --upload-file borgmatic-msys2_*.tar.zstd https://free.keep.sh
      #     RC=$?
      #     echo RC: $RC
      #     exit $RC

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: borgmatic-msys2.tar.zstd
          path: borgmatic-msys2_*.tar.zstd
          retention-days: 1
